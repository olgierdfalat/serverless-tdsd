'use strict';

// tests for hello
// Generated by serverless-mocha-plugin

const mod = require('../../handlers/time.js');
const mochaPlugin = require('serverless-mocha-plugin');
const sinon = require('sinon');

const lambdaWrapper = mochaPlugin.lambdaWrapper;
const expect = mochaPlugin.chai.expect;
const wrapped = lambdaWrapper.wrap(mod, { handler: 'endpoint' });
const datetimeService = require('./../../services/dateTimeService');

describe('hello', () => {
  before((done) => {
//  lambdaWrapper.init(liveFunction); // Run the deployed lambda

    done();
  });

  let sandbox;
  beforeEach(() => {
    sandbox = sinon.sandbox.create();
  });

  afterEach(() => {
    sandbox.restore();
  });

  it('should return current time', () => {
    const currentTime = '14:15:45 GMT+0000 (UTC)';
    sandbox.stub(datetimeService, 'getCurrentTime').returns(currentTime);

    return wrapped.run({}).then((response) => {
      const body = JSON.parse(response.body);
      expect(response.statusCode).to.be.equal(200);
      expect(body.message).to.equal(`Hello World, the current time is ${currentTime}.`);
    });
  });
});
